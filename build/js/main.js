"use strict";

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  var space = document.querySelector('.space');
  var earthContainer = document.querySelector('.earth-container');
  var earth = document.querySelector('#earth');
  var ship = document.getElementById('ship');
  var containerRect = earthContainer.getBoundingClientRect();
  var earthRadius = containerRect.width / 2;
  var score = 0;
  console.log(containerRect);
  function updateShipPosition(angle) {
    var shipX = containerRect.left + containerRect.width / 2 + earthRadius * Math.cos(angle);
    var shipY = containerRect.top + containerRect.height / 2 + earthRadius * Math.sin(angle);
    ship.style.left = shipX - ship.clientWidth / 2 + 'px';
    ship.style.top = shipY - ship.clientHeight / 2 + 'px';
    ship.style.transform = "rotate(".concat(angle, "rad)");
  }
  function checkCollision(bullet, movingElement) {
    var bulletRect = bullet.getBoundingClientRect();
    var movingElementRect = movingElement.getBoundingClientRect();
    console.log("gameover");
    return bulletRect.left < movingElementRect.right && bulletRect.right > movingElementRect.left && bulletRect.top < movingElementRect.bottom && bulletRect.bottom > movingElementRect.top;
  }
  function setScore(score) {
    var scoreView = document.createElement('div');
    scoreView.className = 'score';
    space.appendChild(scoreView);
    scoreView.innerHTML = "<h1>your score</h1> : <span>".concat(score, "</span>");
  }
  function removeScore() {
    var scoreView = document.querySelector('.score');
    scoreView.parentNode.removeChild(scoreView);
  }
  setScore(score);
  document.addEventListener('mousemove', function (e) {
    var mouseX = e.clientX - containerRect.left;
    var mouseY = e.clientY - containerRect.top;
    ship.style.opacity = "1";
    var angle = Math.atan2(mouseY - containerRect.height / 2, mouseX - containerRect.width / 2);
    updateShipPosition(angle);
  });
  var canFire = 1;
  document.addEventListener('click', function (e) {
    var bullet = document.createElement('div');
    var mouseX = e.clientX - containerRect.left;
    var mouseY = e.clientY - containerRect.top;
    var angle = Math.atan2(mouseY - containerRect.height / 2, mouseX - containerRect.width / 2);
    updateShipPosition(angle);
    // console.log(canFire)
    // console.log(document.querySelectorAll('.bullet').length)
    if (canFire <= 1 && document.querySelectorAll('.bullet').length < 6) {
      canFire++;
      console.log(canFire);
      bullet.className = 'bullet';
      bullet.style.position = 'absolute';
      bullet.style.width = '40px';
      bullet.style.height = '10px';
      bullet.style.background = 'red';
      space.appendChild(bullet);
      // console.log("shot")
      bullet.style.left = ship.style.left;
      bullet.style.top = ship.style.top;
      bullet.style.transform = "rotate(".concat(angle, "rad)");
    }
    setTimeout(function () {
      canFire = 1;
    }, 500);
    var bulletSpeed = 9;
    var bulletDX = bulletSpeed * Math.cos(angle);
    var bulletDY = bulletSpeed * Math.sin(angle);
    function moveBullet() {
      var bulletX = parseFloat(bullet.style.left);
      var bulletY = parseFloat(bullet.style.top);
      bullet.style.left = bulletX + bulletDX + 'px';
      bullet.style.top = bulletY + bulletDY + 'px';
      var movingElementsHorizontal = document.querySelectorAll('.moving-element-horizontal');
      var _iterator = _createForOfIteratorHelper(movingElementsHorizontal),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var movingElement = _step.value;
          if (checkCollision(bullet, movingElement)) {
            space.removeChild(bullet);
            movingElement.parentNode.removeChild(movingElement);
            removeScore();
            score++;
            setScore(score);
            return; // Виходимо з циклу, бо вже видалили елемент
          }
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      var movingElementsVertical = document.querySelectorAll('.moving-element-vertical');
      var _iterator2 = _createForOfIteratorHelper(movingElementsVertical),
        _step2;
      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var _movingElement = _step2.value;
          if (checkCollision(bullet, _movingElement)) {
            space.removeChild(bullet);
            document.body.removeChild(_movingElement);
            removeScore();
            score++;
            setScore(score);
            return; // Виходимо з циклу, бо вже видалили елемент
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
      if (bulletX < 0 || bulletX > window.innerWidth || bulletY < 0 || bulletY > window.innerHeight) {
        space.removeChild(bullet);
      } else {
        requestAnimationFrame(moveBullet);
      }
    }
    moveBullet();
  });
  function spawnMovingElement() {
    var movingElementHorizontal = document.createElement('div');
    var movingElementVertical = document.createElement('div');
    movingElementHorizontal.className = 'moving-element-horizontal';
    movingElementVertical.className = 'moving-element-vertical';
    document.body.appendChild(movingElementHorizontal);
    document.body.appendChild(movingElementVertical);
    var horizontalStartX = Math.random() < 0.5 ? -50 : window.innerWidth + 50; // Поза лівим або правим краєм екрану
    var horizontalStartY = Math.random() * window.innerHeight;
    var verticalStartY = Math.random() < 0.5 ? -50 : window.innerHeight + 50; // Поза лівим або правим краєм екрану
    var verticalStartX = Math.random() * window.innerWidth;
    movingElementHorizontal.style.left = horizontalStartX + 'px';
    movingElementHorizontal.style.top = horizontalStartY + 'px';
    movingElementHorizontal.style.animation = 'moveToCenter 5s linear';
    movingElementVertical.style.left = verticalStartX + 'px';
    movingElementVertical.style.top = verticalStartY + 'px';
    movingElementVertical.style.animation = 'moveToCenter 5s linear';
    if (checkCollision(movingElementHorizontal, earth)) {
      document.body.removeChild(movingElementHorizontal);
    }
    movingElementHorizontal.addEventListener('animationend', function () {
      document.body.removeChild(movingElementHorizontal);
    });
    movingElementVertical.addEventListener('animationend', function () {
      document.body.removeChild(movingElementVertical);
    });
  }
  function spawnElementsWithInterval() {
    setInterval(spawnMovingElement, Math.random() * 2000 + 1000);
  }
  spawnElementsWithInterval();
});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
